{"version":3,"sources":["webpack:///./node_modules/_babel-runtime@6.26.0@babel-runtime/core-js/json/stringify.js","webpack:///./src/views/account/add.vue?421c","webpack:///./src/views/account/add.vue","webpack:///src/views/account/add.vue","webpack:///./node_modules/_core-js@2.5.7@core-js/library/fn/json/stringify.js"],"names":["module","exports","default","__webpack_require__","__esModule","account_add","render","_vm","this","_h","$createElement","_c","_self","_v","_e","attrs","bordered","label-width","model","value","callback","$$v","formItem","expression","label","staticStyle","width","maxlength","type","placeholder","$set","on","on-blur","$event","exists","accountId","color","_l","item","idx","key","on-change","selectLink","roleId","_s","roleName","ref","refInFor","data","show-checkbox","click","save","margin-left","handCancel","staticRenderFns","Component","normalizeComponent","add","__webpack_exports__","account","password","role","nickname","isRoterAlive","roleList","linkList","arrRoleLink","isSubmit","link","created","getRole","getLinkList","$route","query","id","getAccount","methods","self","$http","get","global","url","account_find","then","response","o","arrLinkId","_arr","split","find","index","linkid","length","role_linklist","result","jsonLink","map","node","children","i","includes","toString","checked","reload","$nextTick","account_exists","$Message","error","name","RegExp","$trim","push","post","__WEBPACK_IMPORTED_MODULE_1_js_md5___default","roleid","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default","isAdd","msg","success","$router","path","catch","handleReset","role_list","itemLink","forEach","parentLinkId","linkId","title","expand","item1","item2","item3","item4","item5","core","$JSON","JSON","stringify","it","apply","arguments"],"mappings":"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","file":"static/js/4.a3bc0407e922f3463d53.js","sourcesContent":["module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_babel-runtime@6.26.0@babel-runtime/core-js/json/stringify.js\n// module id = 3cXf\n// module chunks = 3 4","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.isRoterAlive)?_c('router-view',[_vm._v(\"1\")]):_vm._e(),_vm._v(\" \"),_c('Card',{attrs:{\"bordered\":false}},[_c('Form',{attrs:{\"label-width\":80},model:{value:(_vm.formItem),callback:function ($$v) {_vm.formItem=$$v},expression:\"formItem\"}},[_c('FormItem',{attrs:{\"label\":\"用户昵称:\"}},[_c('Input',{staticStyle:{\"width\":\"300px\"},attrs:{\"maxlength\":20,\"type\":\"text\",\"placeholder\":\"请输入昵称...\"},model:{value:(_vm.formItem.nickname),callback:function ($$v) {_vm.$set(_vm.formItem, \"nickname\", $$v)},expression:\"formItem.nickname\"}})],1),_vm._v(\" \"),_c('FormItem',{attrs:{\"label\":\"登录账户:\"}},[_c('Input',{staticStyle:{\"width\":\"300px\"},attrs:{\"maxlength\":20,\"type\":\"text\",\"placeholder\":\"请输入账号...\"},on:{\"on-blur\":function($event){_vm.exists()}},model:{value:(_vm.formItem.account),callback:function ($$v) {_vm.$set(_vm.formItem, \"account\", $$v)},expression:\"formItem.account\"}})],1),_vm._v(\" \"),(_vm.accountId==0)?_c('FormItem',{attrs:{\"label\":\"登录密码:\"}},[_c('Input',{staticStyle:{\"width\":\"300px\"},attrs:{\"maxlength\":20,\"type\":\"password\",\"placeholder\":\"请输入密码...\"},model:{value:(_vm.formItem.password),callback:function ($$v) {_vm.$set(_vm.formItem, \"password\", $$v)},expression:\"formItem.password\"}}),_vm._v(\" \"),_c('small',{staticStyle:{\"color\":\"red\"}},[_vm._v(\"默认为:123456\")])],1):_vm._e(),_vm._v(\" \"),_c('FormItem',{attrs:{\"label\":\"选择角色:\"}},_vm._l((_vm.roleList),function(item,idx){return _c('RadioGroup',{key:idx,on:{\"on-change\":function($event){_vm.selectLink()}},model:{value:(_vm.formItem.role),callback:function ($$v) {_vm.$set(_vm.formItem, \"role\", $$v)},expression:\"formItem.role\"}},[_c('Radio',{attrs:{\"label\":item.roleId}},[_vm._v(_vm._s(item.roleName))])],1)})),_vm._v(\" \"),_c('FormItem',{attrs:{\"label\":\"选择权限:\"}},[_c('Col',[_c('FormItem',_vm._l((_vm.linkList),function(item,idx){return _c('Card',{key:idx,staticStyle:{\"width\":\"300px\"},attrs:{\"bordered\":false}},[_c('Tree',{ref:\"Tree\",refInFor:true,attrs:{\"data\":item,\"show-checkbox\":\"\"}})],1)}))],1)],1),_vm._v(\" \"),_c('FormItem',[_c('Button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.save('ruleForm')}}},[_vm._v(\"保存\")]),_vm._v(\" \"),_c('Button',{staticStyle:{\"margin-left\":\"8px\"},attrs:{\"type\":\"ghost\"},on:{\"click\":_vm.handCancel}},[_vm._v(\"取消\")])],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-4d8e1233\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/views/account/add.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./add.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./add.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4d8e1233\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./add.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/account/add.vue\n// module id = null\n// module chunks = ","<!--添加账户-->\n<template>\n  <div>\n    <router-view v-if=\"isRoterAlive\">1</router-view>\n    <Card :bordered=\"false\">\n      <Form v-model=\"formItem\" :label-width=\"80\">\n        <FormItem label=\"用户昵称:\">\n          <Input v-model=\"formItem.nickname\" :maxlength=\"20\" type='text' style=\"width: 300px\" placeholder=\"请输入昵称...\"></Input>\n        </FormItem>\n        <FormItem label=\"登录账户:\">\n          <Input v-model=\"formItem.account\" :maxlength=\"20\" @on-blur=\"exists()\" type='text' style=\"width: 300px\" placeholder=\"请输入账号...\"></Input>\n        </FormItem>\n        <FormItem label=\"登录密码:\" v-if=\"accountId==0\">\n          <Input v-model=\"formItem.password\" :maxlength=\"20\" type='password' style=\"width: 300px\" placeholder=\"请输入密码...\"></Input>\n          <small  style=\"color:red\">默认为:123456</small>\n        </FormItem>\n        <FormItem label=\"选择角色:\">\n          <RadioGroup v-model=\"formItem.role\" @on-change=\"selectLink()\" v-for=\"(item, idx) in roleList\" :key=\"idx\">\n            <Radio :label=\"item.roleId\">{{ item.roleName }}</Radio>\n          </RadioGroup>\n        </FormItem>\n        <FormItem label=\"选择权限:\">\n          <Col>\n            <FormItem>\n              <Card v-for=\"(item, idx) in linkList\" :key=\"idx\" :bordered=\"false\" style=\"width:300px;\">\n                <Tree :data=\"item\" ref=\"Tree\" show-checkbox></Tree>\n              </Card>\n            </FormItem>\n          </Col>\n        </FormItem>\n        <FormItem>\n          <Button type=\"primary\" @click=\"save('ruleForm')\">保存</Button>\n          <Button type=\"ghost\" @click=\"handCancel\" style=\"margin-left: 8px\">取消</Button>\n        </FormItem>\n      </Form>\n    </Card>\n\n  </div>\n</template>\n<script>\n  import md5 from \"js-md5\";\n  export default {\n    data() {\n      return {\n        accountId: 0,\n        formItem: {\n          account: \"\",\n          password: \"123456\",\n          role: \"\",\n          nickname: \"\"\n        },\n        isRoterAlive : true,\n        roleList: [], //角色列表\n        linkList: [], //链接列表 用于页面操作\n        arrRoleLink: [], //角色权限列表->用于角色添加权限或修改角色权限\n        isSubmit: true, //是否可以提交表单\n        link:[]\n      };\n    },\n    created() {\n      this.getRole();\n      this.getLinkList();\n      //编辑用户\n      if (this.$route.query.id) {\n        this.accountId = this.$route.query.id;\n        this.getAccount();\n      }\n    },\n    methods: {\n      //根据用户ID获取用户数据\n      getAccount() {\n        var self = this;\n        self.$http\n          .get(global.url.account_find, {\n            accountId: self.accountId\n          })\n          .then(response => {\n            self.formItem.account = response.account;\n            //self.formItem.password = response.password;\n            self.formItem.role = response.roleId;\n            self.formItem.nickname = response.nickname;\n            self.link = response.link;\n            self.selectLink(1);\n          });\n      },\n      //选择角色勾选权限\n      selectLink(o) {\n        //console.log(o);\n        var self = this;\n        var arrLinkId = []; //linkId集合\n\n        if(o){\n          //console.log(self.link);\n          var _arr = self.link;\n          _arr = _arr.split(',');\n          arrLinkId = _arr;\n        }else{\n          //通过roleId查询到该角色下的所有link\n          self.roleList.find((value, index) => {\n            //console.log(value);\n            if (value.roleId == self.formItem.role) {\n              arrLinkId = value.linkid.split(\",\");\n            }\n          });\n        }\n        if(arrLinkId.length < 1){\n          //console.log(2);\n          //var _url = window.location.href;\n          //window.location.reload();\n        }\n        //console.log(self.roleList);\n        //console.log(arrLinkId);\n        //重新获取link\n        //console.log(4);\n        self.$http.get(global.url.role_linklist).then(result => {\n          self.jsonLink(result);\n          //循环有多少个1级菜单\n          //console.log(self.linkList);\n          self.linkList.map(node => {\n            //循环2级菜单\n            node.map(item => {\n              //获取子级\n              if (item.children) {\n                item.children.map(i => {\n                  //角色与全选集合中找到相同的数据.选中已有权限\n                  if (arrLinkId.includes(i.key.toString())) {\n                    i.checked = true;\n                  }\n                });\n              }\n            });\n          });\n        });\n      },\n      /*刷新当前页面*/\n      reload(){\n        this.isRoterAlive = false;\n        this.$nextTick(function () {\n          this.isRoterAlive = true;\n        })\n      },\n      //验证用户名是否存在\n      exists() {\n        var self = this;\n        if (self.formItem.account != \"\") {\n          self.$http\n            .get(global.url.account_exists, {\n              account: self.formItem.account\n            })\n            .then(result => {\n              if (result && result != null) {\n                self.$Message.error(\"账号已存在!\");\n                self.isSubmit = false;\n              } else {\n                self.isSubmit = true;\n              }\n            });\n        }\n      },\n      //保存用户\n      save(name) {\n        var self = this;\n        var reg = RegExp(\"/(^s*)|(s*$)/g\");\n        if (self.$trim(self.formItem.nickname) == \"\") {\n          self.$Message.error(\"昵称不能为空!\");\n          return false;\n        }\n        if (self.$trim(self.formItem.account) == \"\") {\n          self.$Message.error(\"账号不能为空!\");\n          return false;\n        }\n        if (!self.isSubmit) {\n          self.$Message.error(\"账号已存在!\");\n          return false;\n        }\n        if (self.$trim(self.formItem.password) == \"\") {\n          self.$Message.error(\"密码不能为空!\");\n          return false;\n        }\n        if (self.formItem.role == \"\") {\n          self.$Message.error(\"请选择角色!\");\n          return false;\n        }\n        //循环有多少个1级菜单\n        self.linkList.map(node => {\n          //循环2级菜单\n          node.map(item => {\n            //添加一级\n            //if (item.checked == true) self.arrRoleLink.push(item.key);\n            //获取子级\n            if (item.children) {\n              item.children.map(i => {\n                if (i.checked == true) {\n                  //验证是否存在一级\n                  //只要勾选了子级默认添加一级\n                  if (!self.arrRoleLink.includes(item.key)) {\n                    self.arrRoleLink.push(item.key);\n                  }\n                  if (!self.arrRoleLink.includes(i.key)) {\n                    self.arrRoleLink.push(i.key);\n                  }\n                }\n              });\n            }\n          });\n        });\n        //console.log(self.arrRoleLink);\n        //像后台发起请求\n        this.$http\n          .post(global.url.account_add, {\n            accountId: self.accountId,\n            account: self.formItem.account,\n            password: md5(self.formItem.password),\n            nickname: self.formItem.nickname,\n            roleid: self.formItem.role,\n            link: JSON.stringify(self.arrRoleLink),\n            isAdd: self.accountId == 0 ? true : false\n          })\n          .then(function(response) {\n            let msg = self.accountId == 0 ? \"添加成功!\" : \"修改成功\";\n            self.$Message.success(msg);\n            self.$router.push({\n              path: \"/account\"\n            });\n          })\n          .catch(function(error) {\n            self.$Message.error(\"添加失败!\");\n          });\n      },\n      //重置表单\n      handleReset(name) {\n        this.accountId = 0;\n        this.formItem = {\n          account: \"\",\n          password: \"\",\n          role: \"role\",\n          nickname: \"\"\n        };\n        this.getLinkList();\n      },\n      //取消\n      handCancel(){\n        var self = this;\n        self.$router.push({\n          path: \"/account\"\n        });\n      },\n      //获取角色列表\n      getRole() {\n        var self = this;\n        this.$http.get(global.url.role_list).then(result => {\n          self.roleList = result;\n        });\n      },\n      //获取链接列表\n      getLinkList() {\n        var self = this;\n        this.$http.get(global.url.role_linklist).then(result => {\n          self.jsonLink(result);\n        });\n      },\n      //序列化链接列表\n      jsonLink(data) {\n        var self = this;\n        //初始化数组\n        self.linkList = [];\n        if (data) {\n          var itemLink = [];\n\n          data.forEach(item => {\n            //console.log(item);\n            if(item.parentLinkId === null){\n              itemLink.push({\n                key: item.linkId,\n                //一级菜单名称\n                title: item.name,\n                //是否展开\n                expand: false,\n                //子级菜单集合\n                children: []\n              })\n            }\n          })\n\n          data.forEach(item1 => {\n            itemLink.forEach(item2 => {\n              if(item1.parentLinkId == item2.key){\n                item2.children.push({\n                  key: item1.linkId,\n                  //一级菜单名称\n                  title: item1.name,\n                  //是否展开\n                  expand: true,\n                  //子级菜单集合\n                  children: []\n                })\n              }\n            })\n          })\n\n          data.forEach(item3 => {\n            itemLink.forEach(item4 => {\n              //console.log(item4);\n              item4.children.forEach(item5 => {\n                if(item3.parentLinkId == item5.key){\n                  item5.children.push({\n                    key: item3.linkId,\n                    //一级菜单名称\n                    title: item3.name,\n                    //是否展开\n                    expand: true,\n                  })\n                }\n              })\n            })\n          })\n          if (itemLink) {\n            self.linkList.push(itemLink);\n          }\n          //console.log(itemLink)\n         // console.log(itemLink)\n\n          //定义绑定列表数据\n/*          data.forEach(item => {\n            var itemLink;\n            //初始化一级菜单\n            if (item.parentLinkId === null) {\n              itemLink = [];\n              //添加一级菜单数据\n              itemLink.push({\n                key: item.linkId,\n                //一级菜单名称\n                title: item.name,\n                //是否展开\n                expand: false,\n                //子级菜单集合\n                children: []\n              });\n            }\n            //根据parentLinkId 父ID查询子级菜单\n            data.find(function(value, index, arr) {\n              //将当前级别ID去搜索是否存在子级菜单\n              if (item.linkId == value.parentLinkId) {\n                //将查询出的子级菜单循环加入子级菜单中\n                itemLink.map(element => {\n                  element.children.push({\n                    title: value.name,\n                    key: value.linkId,\n                    checked: false //选中\n                  });\n                });\n              }\n            });\n            if (itemLink) {\n              self.linkList.push(itemLink);\n            }\n          });*/\n        }\n      }\n    }\n  };\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/views/account/add.vue","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.7@core-js/library/fn/json/stringify.js\n// module id = RJ+u\n// module chunks = 3 4"],"sourceRoot":""}